#!/bin/sh

## Copyright (C) 2006-2012 Daniel Baumann <daniel.baumann@progress-technologies.net>
## Copyright (C) 2016      Riku Voipio    <riku.voipio@linaro.org>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.

set -e

_U_BOOT_DIRECTORY="/boot/extlinux"

Update ()
{
	 # Upate target file using source content
	_TARGET="${1}"
	_SOURCE="${2}"

	_TMPFILE="${_TARGET}.tmp"
	rm -f "${_TMPFILE}"

	echo "${_SOURCE}" > "${_TMPFILE}"

	if [ -e "${_TARGET}" ] && cmp -s "${_TARGET}" "${_TMPFILE}"
	then
		rm -f "${_TMPFILE}"
	else
		# FIXME: should use fsync here
		echo "P: Updating ${_TARGET}..."
		mv -f "${_TMPFILE}" "${_TARGET}"
	fi
}

# FIXME: switch to check extlinux file can be written to
# User is unprivileged
if [ "$(id -u)" -ne 0 ]
then
	echo "E: need root privileges"
	exit 1
fi

# Redirect stdout to stderr due Debconf usage
exec 1>&2

# Reading the default file
if [ -e /etc/default/u-boot ]
then
	. /etc/default/u-boot
fi

U_BOOT_UPDATE="${U_BOOT_UPDATE:-true}"

if [ "${U_BOOT_UPDATE}" != "true" ]
then
	echo "P: u-boot-update is disabled in /etc/default/u-boot."

	exit 0
fi

# Checking extlinux directory
echo -n "P: Checking for EXTLINUX directory..."

# Creating extlinux directory
if [ ! -e "${_U_BOOT_DIRECTORY}" ]
then
	echo " not found."

	echo -n "P: Creating EXTLINUX directory..."
	mkdir -p "${_U_BOOT_DIRECTORY}"
	echo " done: ${_U_BOOT_DIRECTORY}"
else
	echo " found."
fi

# Setting defaults
U_BOOT_ALTERNATIVES="${U_BOOT_ALTERNATIVES:-default recovery}"
U_BOOT_DEFAULT="${U_BOOT_DEFAULT:-l0}"
U_BOOT_ENTRIES="${U_BOOT_ENTRIES:-all}"
U_BOOT_MEMDISK="${U_BOOT_MEMDISK:-true}"
U_BOOT_MEMDISK_DIRECTORY="${EXTLINXU_MEMDISK_DIRECTORY:-/boot}"

if [ -z "${U_BOOT_MENU_LABEL}" ]
then
	if [ -x "$(which lsb_release 2>/dev/null)" ]
	then
		U_BOOT_MENU_LABEL="$(lsb_release -i -s) GNU/Linux, kernel"
	else
		U_BOOT_MENU_LABEL="Debian GNU/Linux, kernel"
	fi
fi

U_BOOT_OS_PROBER="${U_BOOT_OS_PROBER:-true}"
U_BOOT_PARAMETERS="${U_BOOT_PARAMETERS:-ro quiet}"

if [ -z "${U_BOOT_ROOT}" ]
then
	# Find root partition
	while read _LINE
	do

read _FS_SPEC _FS_FILE _FS_VFSTYPE _FS_MNTOPS _FS_FREQ _FS_PASSNO << EOF
${_LINE}
EOF

		if [ "${_FS_SPEC}" != "#" ] && [ "${_FS_FILE}" = "/" ]
		then
			U_BOOT_ROOT="root=${_FS_SPEC}"
			break
		fi
	done < /etc/fstab
fi

U_BOOT_TIMEOUT="${U_BOOT_TIMEOUT:-50}"

# Writing new default file
cat > "/etc/default/u-boot" << EOF
## /etc/default/u-boot - configuration file for extlinux-update(8)

U_BOOT_UPDATE="${U_BOOT_UPDATE}"

U_BOOT_ALTERNATIVES="${U_BOOT_ALTERNATIVES}"
U_BOOT_DEFAULT="${U_BOOT_DEFAULT}"
U_BOOT_ENTRIES="${U_BOOT_ENTRIES}"
U_BOOT_MENU_LABEL="${U_BOOT_MENU_LABEL}"
U_BOOT_PARAMETERS="${U_BOOT_PARAMETERS}"
U_BOOT_ROOT="${U_BOOT_ROOT}"
U_BOOT_TIMEOUT="${U_BOOT_TIMEOUT}"
EOF

# Create linux.cfg
_CONFIG="\
## ${_U_BOOT_DIRECTORY}/linux.cfg
##
## IMPORTANT WARNING
##
## The configuration of this file is generated automatically.
## Do not edit this file manually, use: extlinux-update


"

# Find linux versions
_VERSIONS="$(cd /boot && ls vmlinuz-* | grep -v .dpkg-tmp | sed -e 's|vmlinuz-||g' | sort -nr)"

if [ "$(stat --printf %d /)" = "$(stat --printf %d /boot)" ]
then
	# / and /boot are on the same filesystem
	_BOOT_DIRECTORY="/boot"
else
	# / and /boot are not on the same filesystem
	_BOOT_DIRECTORY=""
fi


for _VERSION in ${_VERSIONS}
do
	echo "P: Writing config for /boot/vmlinuz-${_VERSION}..."

	_NUMBER="${_NUMBER:-0}"
	_ENTRY="${_ENTRY:-1}"

	if [ -e /boot/initrd.img-${_VERSION} ]
	then
		_INITRD="initrd=${_BOOT_DIRECTORY}/initrd.img-${_VERSION}"
	else
		_INITRD=""
	fi

	if echo ${U_BOOT_ALTERNATIVES} | grep -q default
	then

	# Writing default entry
	_CONFIG="${_CONFIG}

label l${_NUMBER}
	menu label ${U_BOOT_MENU_LABEL} ${_VERSION}
	linux ${_BOOT_DIRECTORY}/vmlinuz-${_VERSION}
	append ${_INITRD} ${U_BOOT_ROOT} ${U_BOOT_PARAMETERS}"

	fi

	if echo ${U_BOOT_ALTERNATIVES} | grep -q live
	then

	# Writing live entry
	_CONFIG="${_CONFIG}

label l${_NUMBER}l
	menu label ${U_BOOT_MENU_LABEL} ${_VERSION} (live mode)
	linux ${_BOOT_DIRECTORY}/vmlinuz-${_VERSION}
	append ${_INITRD} ${U_BOOT_ROOT} ${U_BOOT_PARAMETERS} boot=live plainroot
	text help
   This option boots the system into live mode (non-persistent)
	endtext"

	fi

	if echo ${U_BOOT_ALTERNATIVES} | grep -q recovery
	then

	# Writing recovery entry
	_CONFIG="${_CONFIG}

label l${_NUMBER}r
	menu label ${U_BOOT_MENU_LABEL} ${_VERSION} (recovery mode)
	linux ${_BOOT_DIRECTORY}/vmlinuz-${_VERSION}
	append ${_INITRD} ${U_BOOT_ROOT} $(echo ${U_BOOT_PARAMETERS} | sed -e 's| quiet||') single
	text help
   This option boots the system into recovery mode (single-user)
	endtext"

	fi

	_NUMBER="$((${_NUMBER} + 1))"

	if [ "${U_BOOT_ENTRIES}" = "${_ENTRY}" ]
	then
		break
	fi
done

_NUMBER=""

Update "${_U_BOOT_DIRECTORY}/linux.cfg" "${_CONFIG}"

# Create the main extlinux.conf file
_CONFIG="\
## ${_U_BOOT_DIRECTORY}/extlinux.conf
##
## IMPORTANT WARNING
##
## The configuration of this file is generated automatically.
## Do not edit this file manually, use: extlinux-update


default ${U_BOOT_DEFAULT}
prompt 1
timeout ${U_BOOT_TIMEOUT}
"

Update "${_U_BOOT_DIRECTORY}/extlinux.conf" "${_CONFIG}"
